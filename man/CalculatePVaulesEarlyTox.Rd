% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CalculatePVaulesEarlyTox.R
\name{CalculatePVaulesEarlyTox}
\alias{CalculatePVaulesEarlyTox}
\title{Calculate P-values related to early toxicity reporting}
\usage{
CalculatePVaulesEarlyTox(
  rawdata,
  maxMonth = 6,
  nBootImputation = 20,
  randomSeed = 42
)
}
\arguments{
\item{rawdata}{The input data frame containing toxicity data. The data is the
output from the function ExtractToxicityData}

\item{maxMonth}{The maximum month that will provide data for the after RT
regression (See details - default is 6)}

\item{nBootImputation}{The number of multiple imputations that are performed
in case baseline toxicity is missing (default is 20)}

\item{randomSeed}{is a seed value to the random generator used during imputation (default 42)}
}
\value{
P-values related to whether there is a statistically significant
difference in toxicity between the two arms of the study
}
\description{
Calculate P-values related to early toxicity reporting
}
\details{
The function calculates the p-values related to early toxicity
reporting of the Narlal2 trial. Toxicity was scored during all weeks of
radiotherapy and at months 3 and 6 (the toxicity was also scored at later
months, but 3 and 6 months are included in the early toxicity reporting).
The returned p-values are related to either during RT or 3 and 6 months
after randomization. The p-values are adjusted for the baseline value and
whether the patient has received Durvalumab. The main regression is
ordinal::clmm(toxScore~ treatmentArm + baseLineTox + durvalumab +
(1|patient_id)). The returned p-values are the p-values related to the
likelihood ratio test between the described model and the same model
without including treatmentArm (thus testing if treatmentArm add statically
significant information to the model). The regression includes all the
different levels of toxScore (e.g. 0-1,2,3,4,5), and the predictors are the
treatment arm, administration of  Durvalumab, and the initial baseline
values (the value noted at week 1). Each toxicity during RT or months 3 and
6 will provide an observation for the regression. The value of Durvalumab
will only be true if the patient has had Durvalumab and the toxicity is
scored after the initialization of Durvalumab. The regression is made as a
mixed model (the term (1|patient_id)). This term adds a random effect to
the model for each patient. The random effect compensates for some patients
having more missing toxicity scores than others, which otherwise would make
the individual patients contribute differently to the regression. In some
cases, the patient baseline value might be missing. If so, the value will
be imputed by a random sampling of the same value among the other patients
from the same institution (unless the institution has provided less than 20
patients, then the sampling will be performed from all the patients in the
study). If there is a need for baseline imputation, the regression is
performed 20 times (multiple imputation), and the returned p-value will be
the median p-value related to the 20 regressions. Due to quite a low number
of toxicity observations, the regression will quite often result in perfect
separation of the toxicity scores. The perfect separation makes the code
slow since there is a need for many iterations to stabilize the calculation
of the likelihood. Therefore, the example code removes many toxicity types
to avoid taking too much time.
}
\examples{
file <- system.file('extdata','DemoData.csv',package="Narlal2")
df <- LoadAndPrepareData(filename=file)
PtTox <- ExtractToxicityData(df)
# remove all toxicity except for fatigue to make a quick example code
index<-grepl('_fu_mdr_',names(PtTox)) | grepl('_rt_uge_',names(PtTox))
index<-index & !(grepl('fatigue_fu_mdr_',names(PtTox)) | grepl('fatigue_rt_uge_',names(PtTox)))
PtTox[,index]<-NULL
p_values <- CalculatePVaulesEarlyTox(PtTox,maxMonth=6,nBootImputation=1)
}
